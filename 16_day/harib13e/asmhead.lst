     1                                  ; haribote-os boot asm
     2                                  ; TAB=4
     3                                  
     4                                  BOTPAK	EQU		0x00280000		; bootpackのロード先
     5                                  DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
     6                                  DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所（リアルモード）
     7                                  
     8                                  ; BOOT_INFO関係
     9                                  CYLS	EQU		0x0ff0			; ブートセクタが設定する
    10                                  LEDS	EQU		0x0ff1
    11                                  VMODE	EQU		0x0ff2			; 色数に関する情報。何ビットカラーか？
    12                                  SCRNX	EQU		0x0ff4			; 解像度のX
    13                                  SCRNY	EQU		0x0ff6			; 解像度のY
    14                                  VRAM	EQU		0x0ff8			; グラフィックバッファの開始番地
    15                                  
    16                                  		ORG		0xc200			; このプログラムがどこに読み込まれるのか
    17                                  
    18                                  ; 画面モードを設定
    19                                  VBEMODE EQU		0x101
    20                                  
    21                                  ; これではうまく動かない
    22                                  ; 		MOV		BX,0x4101			; VBEの640x480x8bitカラー
    23                                  ; 		MOV		AX,0x4f02
    24                                  ; 		INT		0x10
    25                                  ; 		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
    26                                  ; 		MOV		WORD [SCRNX],640
    27                                  ; 		MOV		WORD [SCRNY],480
    28                                  ; 		MOV		DWORD [VRAM],0xe0000000
    29                                  
    30                                  ; VBE存在確認
    31 00000000 B80090                  MOV     AX, 0x9000
    32 00000003 8EC0                    MOV     ES, AX
    33 00000005 BF0000                  MOV     DI, 0
    34 00000008 B8004F                  MOV     AX, 0x4f00
    35 0000000B CD10                    INT     0x10
    36 0000000D 83F84F                  CMP     AX, 0x004f
    37 00000010 7552                    JNE     scrn320
    38                                  
    39                                  ; VBEバージョン確認 2.0以上か
    40 00000012 268B4504                MOV     AX, [ES:DI + 4]
    41 00000016 3D0002                  CMP     AX, 0x0200
    42 00000019 7249                    JB      scrn320
    43                                  
    44                                  ; 画面モード情報を取得する (指定した画面モードが使えない場合はjmp)
    45 0000001B B90101                  MOV     CX, VBEMODE
    46 0000001E B8014F                  MOV     AX, 0x4f01
    47 00000021 CD10                    INT     0x10
    48 00000023 83F84F                  CMP     AX, 0x004f
    49 00000026 753C                    JNE     scrn320
    50                                  
    51                                  ; 画面モード情報を確認する
    52 00000028 26807D1908              CMP     BYTE [ES:DI + 0x19], 8	; 色数: 8かどうか
    53 0000002D 7535                    JNE     scrn320
    54 0000002F 26807D1B04              CMP     BYTE [ES:DI + 0x1b], 4	; 色の指定方法: パレットモード(4)かどうか
    55 00000034 752E                    JNE     scrn320
    56 00000036 268B05                  MOV     AX, [ES:DI + 0x00]		; モード属性: 画面モードに0x4000足しても大丈夫
    57 00000039 258000                  AND     AX, 0x0080      ; bit7にフラグが立っているかどうか
    58 0000003C 7426                    JZ      scrn320
    59                                  
    60                                  ; 画面モード切り替え!
    61                                  newwindowmode:
    62                                          ORG     0xc200
    63 0000003E BB0141                          MOV     BX, VBEMODE + 0x4000   ; VBEの1024x768x8bitカラー
    64 00000041 B8024F                          MOV     AX, 0x4f02
    65 00000044 CD10                            INT     0x10
    66 00000046 C606F20F08                      MOV     BYTE[VMODE], 8      	; 画面の設定をメモする
    67 0000004B 268B4512                        MOV     AX, [ES:DI + 0x12]		; Xの解像度
    68 0000004F A3F40F                          MOV     WORD[SCRNX], AX
    69 00000052 268B4514                        MOV     AX, [ES:DI + 0x14]		; Yの解像度
    70 00000056 A3F60F                          MOV     WORD[SCRNY], AX
    71 00000059 26668B4528                      MOV     EAX, [ES:DI + 0x28]		; VRAMの番地
    72 0000005E 66A3F80F                        MOV     DWORD[VRAM], EAX
    73 00000062 EB20                            JMP     keystatus
    74                                  
    75                                  ; 解像度を320x200にする
    76                                  scrn320:
    77                                          ORG     0xc200
    78 00000064 B013                            MOV     AL, 0x13    ; 320x200x8bitカラー
    79 00000066 B400                            MOV     AH, 0x00
    80 00000068 CD10                            INT     0x10
    81 0000006A C606F20F08                      MOV     BYTE[VMODE], 8      ; 画面の設定をメモする
    82 0000006F C706F40F4001                    MOV     WORD[SCRNX], 320
    83 00000075 C706F60FC800                    MOV     WORD[SCRNY], 200
    84 0000007B 66C706F80F00000A00              MOV     DWORD[VRAM], 0x000a0000
    85                                  
    86                                  keystatus:
    87 00000084 B402                            MOV     AH, 0x02    ; キーボードの設定をBIOSから教えてもらう
    88 00000086 CD16                            INT     0x16
    89 00000088 A2F10F                          MOV     [LEDS], AL
    90                                  
    91                                  ; PICが一切の割り込みを受け付けないようにする
    92                                  ;	AT互換機の仕様では、PICの初期化をするなら、
    93                                  ;	こいつをCLI前にやっておかないと、たまにハングアップする
    94                                  ;	PICの初期化はあとでやる
    95                                  
    96 0000008B B0FF                    		MOV		AL,0xff
    97 0000008D E621                    		OUT		0x21,AL
    98 0000008F 90                      		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
    99 00000090 E6A1                    		OUT		0xa1,AL
   100                                  
   101 00000092 FA                      		CLI						; さらにCPUレベルでも割り込み禁止
   102                                  
   103                                  ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
   104                                  
   105 00000093 E8B500                  		CALL	waitkbdout
   106 00000096 B0D1                    		MOV		AL,0xd1
   107 00000098 E664                    		OUT		0x64,AL
   108 0000009A E8AE00                  		CALL	waitkbdout
   109 0000009D B0DF                    		MOV		AL,0xdf			; enable A20
   110 0000009F E660                    		OUT		0x60,AL
   111 000000A1 E8A700                  		CALL	waitkbdout
   112                                  
   113                                  ; プロテクトモード移行
   114                                  
   115                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述 ; NASMではエラーが出るのでこの行削除
   116                                  
   117 000000A4 0F0116[8A01]            		LGDT	[GDTR0]			; 暫定GDTを設定
   118 000000A9 0F20C0                  		MOV		EAX,CR0
   119 000000AC 6625FFFFFF7F            		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
   120 000000B2 6683C801                		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
   121 000000B6 0F22C0                  		MOV		CR0,EAX
   122 000000B9 EB00                    		JMP		pipelineflush
   123                                  pipelineflush:
   124 000000BB B80800                  		MOV		AX,1*8			;  読み書き可能セグメント32bit
   125 000000BE 8ED8                    		MOV		DS,AX
   126 000000C0 8EC0                    		MOV		ES,AX
   127 000000C2 8EE0                    		MOV		FS,AX
   128 000000C4 8EE8                    		MOV		GS,AX
   129 000000C6 8ED0                    		MOV		SS,AX
   130                                  
   131                                  ; bootpackの転送
   132                                  
   133 000000C8 66BE[90010000]          		MOV		ESI,bootpack	; 転送元
   134 000000CE 66BF00002800            		MOV		EDI,BOTPAK		; 転送先
   135 000000D4 66B900000200            		MOV		ECX,512*1024/4
   136 000000DA E87500                  		CALL	memcpy
   137                                  
   138                                  ; ついでにディスクデータも本来の位置へ転送
   139                                  
   140                                  ; まずはブートセクタから
   141                                  
   142 000000DD 66BE007C0000            		MOV		ESI,0x7c00		; 転送元
   143 000000E3 66BF00001000            		MOV		EDI,DSKCAC		; 転送先
   144 000000E9 66B980000000            		MOV		ECX,512/4
   145 000000EF E86000                  		CALL	memcpy
   146                                  
   147                                  ; 残り全部
   148                                  
   149 000000F2 66BE00820000            		MOV		ESI,DSKCAC0+512	; 転送元
   150 000000F8 66BF00021000            		MOV		EDI,DSKCAC+512	; 転送先
   151 000000FE 66B900000000            		MOV		ECX,0
   152 00000104 8A0EF00F                		MOV		CL,BYTE [CYLS]
   153 00000108 6669C900120000          		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   154 0000010F 6681E980000000          		SUB		ECX,512/4		; IPLの分だけ差し引く
   155 00000116 E83900                  		CALL	memcpy
   156                                  
   157                                  ; asmheadでしなければいけないことは全部し終わったので、
   158                                  ;	あとはbootpackに任せる
   159                                  
   160                                  ; bootpackの起動
   161                                  
   162 00000119 66BB00002800            		MOV		EBX,BOTPAK
   163 0000011F 66678B4B10              		MOV		ECX,[EBX+16]
   164 00000124 6683C103                		ADD		ECX,3			; ECX += 3;
   165 00000128 66C1E902                		SHR		ECX,2			; ECX /= 4;
   166 0000012C 7410                    		JZ		skip			; 転送するべきものがない
   167 0000012E 66678B7314              		MOV		ESI,[EBX+20]	; 転送元
   168 00000133 6601DE                  		ADD		ESI,EBX
   169 00000136 66678B7B0C              		MOV		EDI,[EBX+12]	; 転送先
   170 0000013B E81400                  		CALL	memcpy
   171                                  skip:
   172 0000013E 66678B630C              		MOV		ESP,[EBX+12]	; スタック初期値
   173 00000143 66EA1B0000001000        		JMP		DWORD 2*8:0x0000001b
   174                                  
   175                                  waitkbdout:
   176 0000014B E464                    		IN		 AL,0x64
   177 0000014D 2402                    		AND		 AL,0x02
   178 0000014F 75FA                    		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   179 00000151 C3                      		RET
   180                                  
   181                                  memcpy:
   182 00000152 66678B06                		MOV		EAX,[ESI]
   183 00000156 6683C604                		ADD		ESI,4
   184 0000015A 66678907                		MOV		[EDI],EAX
   185 0000015E 6683C704                		ADD		EDI,4
   186 00000162 6683E901                		SUB		ECX,1
   187 00000166 75EA                    		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   188 00000168 C3                      		RET
   189                                  ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   190                                  
   191                                  		;ALIGNB	16
   192 00000169 00<rep 7h>              		ALIGNB	16, DB 0	; NASMでは警告が出るので修正
   193                                  GDT0:
   194                                  		;RESB	8				; ヌルセレクタ
   195 00000170 00<rep 8h>              		TIMES	8 DB 0		; NASMでは警告が出るので修正
   196 00000178 FFFF00000092CF00        		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   197 00000180 FFFF0000289A4700        		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   198                                  
   199 00000188 0000                    		DW		0
   200                                  GDTR0:
   201 0000018A 1700                    		DW		8*3-1
   202 0000018C [70010000]              		DD		GDT0
   203                                  
   204                                  		;ALIGNB	16
   205                                  		ALIGNB	16, DB 0	; NASMでは警告が出るので修正
   206                                  bootpack:
